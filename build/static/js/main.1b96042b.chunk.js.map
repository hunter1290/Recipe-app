{"version":3,"sources":["Recipe.js","App.js","reportWebVitals.js","index.js","recipe.module.css"],"names":["Recipe","title","calories","image","ingredients","className","style","recipe","map","ingredient","text","src","alt","App","useState","recipes","setRecipes","search","setSearch","query","setQuery","useEffect","getRecipes","a","fetch","response","json","data","hits","console","log","onSubmit","e","preventDefault","type","value","onChange","target","label","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"yPAkBeA,EAfA,SAAC,GAA2C,IAA1CC,EAAyC,EAAzCA,MAAOC,EAAkC,EAAlCA,SAAUC,EAAwB,EAAxBA,MAAOC,EAAiB,EAAjBA,YACvC,OACE,sBAAKC,UAAWC,IAAMC,OAAtB,UACE,6BAAKN,IACL,6BACGG,EAAYI,KAAI,SAAAC,GAAU,OACzB,6BAAKA,EAAWC,YAGpB,2CAAcR,KACd,qBAAKG,UAAWC,IAAMH,MAAOQ,IAAKR,EAAOS,IAAI,SC+CpCC,G,MAvDH,WAEV,IAGA,EAA8BC,mBAAS,IAAvC,mBAAOC,EAAP,KAAgBC,EAAhB,KACA,EAA4BF,mBAAS,IAArC,mBAAOG,EAAP,KAAeC,EAAf,KACA,EAA0BJ,mBAAS,WAAnC,mBAAOK,EAAP,KAAcC,EAAd,KAEAC,qBAAU,WACRC,MACC,CAACH,IAEJ,IAAMG,EAAU,uCAAG,8BAAAC,EAAA,sEACMC,MAAM,mCAAD,OAAoCL,EAApC,mBAZf,WAYe,oBAXd,qCAUG,cACXM,EADW,gBAEEA,EAASC,OAFX,OAEXC,EAFW,OAGjBX,EAAWW,EAAKC,MAChBC,QAAQC,IAAIH,EAAKC,MACjBC,QAAQC,IAAIX,GALK,2CAAH,qDAmBhB,OACE,sBAAKd,UAAU,MAAf,UACE,uBAAM0B,SARQ,SAAAC,GAChBA,EAAEC,iBACFb,EAASH,GACTC,EAAU,KAKmBb,UAAU,cAArC,UACE,uBAAOA,UAAU,aAAa6B,KAAK,OAAOC,MAAOlB,EAAQmB,SAd1C,SAAAJ,GACjBd,EAAUc,EAAEK,OAAOF,OACnBN,QAAQC,IAAIb,MAaV,wBAAQZ,UAAU,gBAAgB6B,KAAK,SAAvC,uBAIF,qBAAK7B,UAAU,UAAf,SACGU,EAAQP,KAAI,SAAAD,GAAM,OACjB,cAAC,EAAD,CAEEN,MAAOM,EAAOA,OAAO+B,MAAOpC,SAAUK,EAAOA,OAAOL,SACpDC,MAAOI,EAAOA,OAAOJ,MACrBC,YAAaG,EAAOA,OAAOH,aAHtBG,EAAOA,OAAO+B,iBCpChBC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K,kBCfAc,EAAOC,QAAU,CAAC,OAAS,uBAAuB,MAAQ,yB","file":"static/js/main.1b96042b.chunk.js","sourcesContent":["import React from 'react';\r\nimport style from './recipe.module.css'\r\n\r\nconst Recipe = ({title, calories, image, ingredients}) => {\r\n  return (\r\n    <div className={style.recipe}>\r\n      <h1>{title}</h1>\r\n      <ol>\r\n        {ingredients.map(ingredient => (\r\n          <li>{ingredient.text}</li>\r\n        ))}\r\n      </ol>\r\n      <p>Calories: {calories}</p>\r\n      <img className={style.image} src={image} alt=\"\" />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Recipe;","import React, {useEffect, useState} from 'react';\r\nimport Recipe from './Recipe';\r\nimport './App.css';\r\n\r\n\r\nconst App = () => {\r\n\r\n  const APP_ID = \"f01500cd\";\r\n  const APP_KEY = \"c4bb0959589f6700072fb3e7d2e75f77\";\r\n\r\n  const [recipes, setRecipes] = useState([]);\r\n  const [search, setSearch] = useState(\"\");\r\n  const [query, setQuery] = useState('Deserts');\r\n\r\n  useEffect(() => {\r\n    getRecipes();\r\n  }, [query]);\r\n\r\n  const getRecipes = async () => {\r\n    const response = await fetch(`https://api.edamam.com/search?q=${query}&app_id=${APP_ID}&app_key=${APP_KEY}`);\r\n    const data = await response.json();\r\n    setRecipes(data.hits);\r\n    console.log(data.hits);\r\n    console.log(query);\r\n  }\r\n\r\n  const updateSearch = e => {\r\n      setSearch(e.target.value);\r\n      console.log(search);\r\n  }\r\n\r\n  const getSearch = e => {\r\n    e.preventDefault();\r\n    setQuery(search);\r\n    setSearch(\"\");\r\n  }\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <form onSubmit={getSearch} className=\"search-form\">\r\n        <input className=\"search-bar\" type=\"text\" value={search} onChange={updateSearch} />\r\n        <button className=\"search-button\" type=\"submit\">\r\n          Search\r\n        </button>\r\n      </form>\r\n      <div className=\"recipes\">\r\n        {recipes.map(recipe => (\r\n          <Recipe\r\n            key={recipe.recipe.label}\r\n            title={recipe.recipe.label} calories={recipe.recipe.calories}\r\n            image={recipe.recipe.image}\r\n            ingredients={recipe.recipe.ingredients}\r\n          />\r\n        ))}\r\n        \r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"recipe\":\"recipe_recipe__3_DiK\",\"image\":\"recipe_image__3oXZR\"};"],"sourceRoot":""}